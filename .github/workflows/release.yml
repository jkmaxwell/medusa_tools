name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Install FFmpeg
        run: |
          brew update
          brew install ffmpeg
          echo "FFMPEG_PATH=$(which ffmpeg)" >> $GITHUB_ENV
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller numpy
          
      - name: Update spec file
        run: |
          sed -i '' "s|/opt/homebrew/bin/ffmpeg|$FFMPEG_PATH|g" medusa.spec
          
      - name: Build CLI tool
        run: |
          echo "Building CLI tool..."
          pyinstaller --name medusa_cli --onefile medusa_cli.py
          cd dist
          echo "Creating CLI zip..."
          zip -r medusa_cli_${{ github.ref_name }}_macos.zip medusa_cli
          cd ..
          ls -la dist/
          
      - name: Build GUI app
        run: |
          echo "Building GUI app..."
          pyinstaller --clean medusa.spec
          cd dist
          echo "Creating GUI zip..."
          zip -r "Medusa Wavetable Utility_${{ github.ref_name }}_macos.zip" "Medusa Wavetable Utility.app"
          cd ..
          ls -la dist/
          
      - name: Generate release notes
        run: |
          echo "Generating release notes..."
          python tools/version_manager.py notes ${GITHUB_REF#refs/tags/v} > RELEASE_NOTES.md
          cat RELEASE_NOTES.md
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/medusa_cli_${{ github.ref_name }}_macos.zip
            dist/Medusa Wavetable Utility_${{ github.ref_name }}_macos.zip
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Send notification
        uses: actions/github-script@v7
        with:
          script: |
            const release = context.ref.replace('refs/tags/', '')
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 1,
              body: `ðŸŽ‰ Version ${release} has been released! Check it out at https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${release}`
            })